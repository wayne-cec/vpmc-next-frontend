import type { NextPage } from 'next'
import style from './index.module.scss'
import Drawer from '../../../components/Drawer'
import { useState } from 'react'
import Head from 'next/head'
import dynamic from 'next/dynamic'
import CommiteeCard from '../../../components/CommiteeCard'
import Image from 'next/image'
import doubleRight from '../../../public/aprV2/doubleRight.png'
import doubleLeft from '../../../public/aprV2/doubleLeft.png'
import doubleRightHover from '../../../public/aprV2/doubleRight-hover.png'
import doubleLeftHover from '../../../public/aprV2/doubleLeft-hover.png'
import { useSelector } from 'react-redux'
import { selectCommitee } from '../../../store/slice/commitee'

const MapContainer = dynamic(
  () => import('../../../components/MapContainer/AprV2Map'),
  { ssr: false }
)

const AprV2: NextPage = () => {
  const commiteeInfo = useSelector(selectCommitee)
  const [first, setfirst] = useState<boolean>(false)
  const [drawerBtn, setdrawerBtn] = useState<string>(doubleRight.src)
  return (
    <>
      <Head>
        <title>VPMC | 實價登錄資訊平台</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/yuantai.ico" />
      </Head>
      <div className={style.main}>
        <Drawer
          open={first}
          direction={'row'}
          onClose={() => { setfirst(false) }}
        >
          {
            commiteeInfo.commiteeInExtent.length !== 0
              ?
              commiteeInfo.commiteeInExtent.map((commitee, index) => {
                return <CommiteeCard key={index}
                  {...commitee}
                />
              }) :
              <p>範圍內無社區，請放大地圖</p>
          }

        </Drawer>
        <div className={style.content}>

          <div className={style.mapContainer}>
            <MapContainer basemap='gray' />
          </div>

          <div className={style.footer}>
            <Image
              className={style.drawerBtn}
              src={drawerBtn} width='30px' height='30px'
              onMouseMove={() => {
                if (!first) {
                  setdrawerBtn(doubleRightHover.src)
                } else {
                  setdrawerBtn(doubleLeftHover.src)
                }
              }}
              onMouseLeave={() => {
                if (!first) {
                  setdrawerBtn(doubleRight.src)
                } else {
                  setdrawerBtn(doubleLeft.src)
                }
              }}
              onClick={() => {
                setfirst(prev => !prev)
                // setdrawerBtn(doubleLeft.src)
                if (!first) {
                  setdrawerBtn(doubleLeft.src)
                } else {
                  setdrawerBtn(doubleRight.src)
                }
              }}
            />
          </div>

        </div>
      </div>
    </>
  )
}

export default AprV2
